vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
        vector<vector<int>> res;
        if (root == NULL)
            return res;
        
        stack<TreeNode *> currLevel;
        stack<TreeNode *> nextLevel;
        bool leftToRight = true;
        
        currLevel.push(root);
         vector<int> level;
        while(!currLevel.empty())
        {
           
            TreeNode* node = currLevel.top();
            currLevel.pop();
            
            level.push_back(node->val);
            
            if(leftToRight)
            {
                if(node->left)
                    nextLevel.push(node->left);
                if(node->right)
                    nextLevel.push(node->right); 
            }
            else
            {
                if(node->right)
                    nextLevel.push(node->right);
                if(node->left)
                    nextLevel.push(node->left);   
            }
            if(currLevel.empty())
            {
                res.push_back(level);
                level.resize(0);
                leftToRight = !leftToRight;
                swap(currLevel, nextLevel);
            }
        }
        return res;
    }
