Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least 
one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.

int findDuplicate(vector<int>& nums) {
        int l = 0;
        int h = nums.size() - 1;
        
        while(l < h)
        {
            int mid = (l + h) / 2;
            int count = 0;
            for(int i = 0; i < nums.size(); i++)
            {
                if( nums[i] <= mid)
                    count += 1;
            }  
            if(count <= mid)
                l = mid + 1;
            else
                h = mid;
        }
        return l;
    }
